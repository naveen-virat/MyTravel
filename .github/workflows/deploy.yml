name: Deploy to Production

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Manual trigger

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend to Azure
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore MyTravelAPIServices/MyTravelAPIServices.csproj
      
    - name: Build
      run: dotnet build MyTravelAPIServices/MyTravelAPIServices.csproj --configuration Release --no-restore
      
    - name: Publish
      run: dotnet publish MyTravelAPIServices/MyTravelAPIServices.csproj --configuration Release --no-build --output ./backend-publish
      
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'mytravel-api'  # Replace with your Azure app name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./backend-publish

  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Azure Static Web Apps
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: MyTravelAngular/package-lock.json
        
    - name: Install dependencies
      run: |
        cd MyTravelAngular
        npm ci
        
    - name: Build
      run: |
        cd MyTravelAngular
        npm run build --prod
        
    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: '/MyTravelAngular'
        api_location: ''
        output_location: 'dist'

  create-release:
    runs-on: ubuntu-latest
    name: Create GitHub Release
    needs: [deploy-backend, deploy-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: MyTravel Release ${{ github.ref }}
        body: |
          ## üöÄ MyTravel Application Deployed!
          
          ### üåê Live URLs:
          - **Frontend**: https://mytravel-frontend.azurestaticapps.net
          - **Backend API**: https://mytravel-api.azurewebsites.net
          - **Swagger Docs**: https://mytravel-api.azurewebsites.net/swagger
          
          ### ‚ú® Features in this release:
          - Full-stack travel booking application
          - ASP.NET Core 8.0 Web API
          - Angular 15 Frontend
          - SQL Server Database
          - Swagger API Documentation
          
          ### üõ†Ô∏è For Developers:
          ```bash
          git clone https://github.com/naveen-virat/MyTravel.git
          cd MyTravel
          npm run setup
          npm run start
          ```
        draft: false
        prerelease: false